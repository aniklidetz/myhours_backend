"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –∑–∞–ø–∏—Å–µ–π —Å –±—É–¥—É—â–∏–º–∏ –¥–∞—Ç–∞–º–∏
–ó–∞–ø—É—Å–∫: docker-compose exec web python manage.py shell < delete_future_records.py
"""

from datetime import date, datetime
from worktime.models import WorkLog
import json

print("üóëÔ∏è –£–î–ê–õ–ï–ù–ò–ï –ó–ê–ü–ò–°–ï–ô –° –ë–£–î–£–©–ò–ú–ò –î–ê–¢–ê–ú–ò")
print("=" * 50)

today = date.today()
print(f"üóìÔ∏è –°–µ–≥–æ–¥–Ω—è—à–Ω—è—è –¥–∞—Ç–∞: {today.strftime('%d/%m/%Y')}")

# –ù–∞–π—Ç–∏ –∑–∞–ø–∏—Å–∏ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è
future_worklogs = WorkLog.objects.filter(check_in__date__gt=today)
count = future_worklogs.count()

print(f"üìä –ù–∞–π–¥–µ–Ω–æ {count} –∑–∞–ø–∏—Å–µ–π –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è")

if count > 0:
    # –°–æ–∑–¥–∞—Ç—å –±—ç–∫–∞–ø
    print("üíæ –°–æ–∑–¥–∞—é —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é...")
    backup_data = []
    
    for log in future_worklogs:
        backup_record = {
            'id': log.id,
            'employee_id': log.employee_id if hasattr(log, 'employee_id') else None,
            'employee_name': f"{log.employee.first_name} {log.employee.last_name}" if log.employee else "Unknown",
            'check_in': log.check_in.isoformat() if log.check_in else None,
            'check_out': log.check_out.isoformat() if log.check_out else None,
            'hours_worked': float(log.hours_worked) if hasattr(log, 'hours_worked') and log.hours_worked else 0,
            'location_check_in': log.location_check_in if hasattr(log, 'location_check_in') else None,
            'location_check_out': log.location_check_out if hasattr(log, 'location_check_out') else None,
            'notes': log.notes if hasattr(log, 'notes') else None,
        }
        backup_data.append(backup_record)
    
    # –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –±—ç–∫–∞–ø –≤ —Ñ–∞–π–ª
    backup_filename = f"backup_future_records_{datetime.now().strftime('%Y%m%d_%H%M%S')}.json"
    
    try:
        with open(backup_filename, 'w', encoding='utf-8') as f:
            json.dump({
                'backup_date': datetime.now().isoformat(),
                'total_records': len(backup_data),
                'description': '–†–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è –∑–∞–ø–∏—Å–µ–π WorkLog —Å –±—É–¥—É—â–∏–º–∏ –¥–∞—Ç–∞–º–∏ –ø–µ—Ä–µ–¥ —É–¥–∞–ª–µ–Ω–∏–µ–º',
                'today_date': today.isoformat(),
                'records': backup_data
            }, f, ensure_ascii=False, indent=2)
        
        print(f"‚úÖ –ë—ç–∫–∞–ø —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ —Ñ–∞–π–ª: {backup_filename}")
        
        # –ü–æ–∫–∞–∑–∞—Ç—å —Å–≤–æ–¥–∫—É
        employees = set()
        total_hours = 0
        for record in backup_data:
            employees.add(record['employee_name'])
            total_hours += record['hours_worked']
        
        print(f"üìã –ë—ç–∫–∞–ø —Å–æ–¥–µ—Ä–∂–∏—Ç:")
        print(f"   ‚Ä¢ {len(backup_data)} –∑–∞–ø–∏—Å–µ–π")
        print(f"   ‚Ä¢ –ó–∞—Ç—Ä–æ–Ω—É—Ç–æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤: {len(employees)}")
        print(f"   ‚Ä¢ –í—Å–µ–≥–æ –∑–∞–ø–∏—Å–µ–π –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ")
        
        # –£–î–ê–õ–ò–¢–¨ –ó–ê–ü–ò–°–ò
        print("\nüóëÔ∏è –£–¥–∞–ª—è—é –∑–∞–ø–∏—Å–∏ —Å –±—É–¥—É—â–∏–º–∏ –¥–∞—Ç–∞–º–∏...")
        deleted_count, deleted_details = future_worklogs.delete()
        
        print(f"‚úÖ –£—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–æ {deleted_count} –∑–∞–ø–∏—Å–µ–π!")
        print(f"–î–µ—Ç–∞–ª–∏ —É–¥–∞–ª–µ–Ω–∏—è: {deleted_details}")
        
        # –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        remaining = WorkLog.objects.filter(check_in__date__gt=today).count()
        
        if remaining == 0:
            print("üéâ –í–°–ï –ó–ê–ü–ò–°–ò –° –ë–£–î–£–©–ò–ú–ò –î–ê–¢–ê–ú–ò –£–°–ü–ï–®–ù–û –£–î–ê–õ–ï–ù–´!")
            print("‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –æ—á–∏—â–µ–Ω–∞ –æ—Ç –ø—Ä–æ–±–ª–µ–º–Ω—ã—Ö –∑–∞–ø–∏—Å–µ–π")
        else:
            print(f"‚ö†Ô∏è –í–Ω–∏–º–∞–Ω–∏–µ: –æ—Å—Ç–∞–ª–æ—Å—å –µ—â–µ {remaining} –∑–∞–ø–∏—Å–µ–π —Å –±—É–¥—É—â–∏–º–∏ –¥–∞—Ç–∞–º–∏")
        
        print(f"\nüìÅ –†–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞: {backup_filename}")
        print("üí° –í —Å–ª—É—á–∞–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –¥–∞–Ω–Ω—ã–µ –º–æ–∂–Ω–æ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∏–∑ —ç—Ç–æ–≥–æ —Ñ–∞–π–ª–∞")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –±—ç–∫–∞–ø–∞: {e}")
        print("‚ö†Ô∏è –£–¥–∞–ª–µ–Ω–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏")
        
else:
    print("‚úÖ –ó–∞–ø–∏—Å–µ–π —Å –±—É–¥—É—â–∏–º–∏ –¥–∞—Ç–∞–º–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ!")
    print("üéâ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —É–∂–µ —á–∏—Å—Ç–∞—è!")

print("\n" + "=" * 50)
print("‚úÖ –û–ü–ï–†–ê–¶–ò–Ø –ó–ê–í–ï–†–®–ï–ù–ê")