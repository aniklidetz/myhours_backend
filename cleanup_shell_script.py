"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∑–∞–ø—É—Å–∫–∞ —á–µ—Ä–µ–∑ Django shell:
python manage.py shell < cleanup_shell_script.py

–õ–∏–±–æ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ:
python manage.py shell
exec(open('cleanup_shell_script.py').read())
"""

from datetime import date, datetime
from worktime.models import WorkLog
from users.models import Employee

def cleanup_future_dates():
    today = date.today()
    print(f"üóìÔ∏è –°–µ–≥–æ–¥–Ω—è—à–Ω—è—è –¥–∞—Ç–∞: {today.strftime('%d/%m/%Y')}")
    print("=" * 50)
    
    # –ù–∞–π—Ç–∏ –∑–∞–ø–∏—Å–∏ WorkLog —Å –±—É–¥—É—â–∏–º–∏ –¥–∞—Ç–∞–º–∏
    try:
        future_worklogs = WorkLog.objects.filter(
            check_in__date__gt=today
        ).order_by('check_in')
        
        count = future_worklogs.count()
        print(f"üìä –ù–∞–π–¥–µ–Ω–æ {count} –∑–∞–ø–∏—Å–µ–π WorkLog —Å –±—É–¥—É—â–∏–º–∏ –¥–∞—Ç–∞–º–∏:")
        print()
        
        if count > 0:
            print("ID | –°–æ—Ç—Ä—É–¥–Ω–∏–∫ | –î–∞—Ç–∞ –≤—Ö–æ–¥–∞ | –î–∞—Ç–∞ –≤—ã—Ö–æ–¥–∞ | –ß–∞—Å—ã")
            print("-" * 60)
            
            total_hours = 0
            employees_affected = set()
            
            for log in future_worklogs:
                employee_name = "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ"
                try:
                    if log.employee:
                        employee_name = f"{log.employee.first_name} {log.employee.last_name}"
                        employees_affected.add(employee_name)
                    elif hasattr(log, 'employee_id') and log.employee_id:
                        try:
                            emp = Employee.objects.get(id=log.employee_id)
                            employee_name = f"{emp.first_name} {emp.last_name}"
                            employees_affected.add(employee_name)
                        except Employee.DoesNotExist:
                            employee_name = f"ID:{log.employee_id}"
                except Exception as e:
                    employee_name = f"–û—à–∏–±–∫–∞: {str(e)}"
                
                check_in_date = log.check_in.strftime('%d/%m/%Y %H:%M') if log.check_in else "–ù–µ—Ç"
                check_out_date = log.check_out.strftime('%d/%m/%Y %H:%M') if log.check_out else "–ù–µ—Ç"
                hours = 0
                if hasattr(log, 'hours_worked') and log.hours_worked:
                    hours = log.hours_worked
                    total_hours += hours
                hours_str = f"{hours:.2f}h" if hours else "0h"
                
                print(f"{log.id:3d} | {employee_name:15s} | {check_in_date:16s} | {check_out_date:16s} | {hours_str}")
            
            print("\n" + "=" * 50)
            print("üìà –ê–ù–ê–õ–ò–ó –í–õ–ò–Ø–ù–ò–Ø:")
            print(f"üë• –ó–∞—Ç—Ä–æ–Ω—É—Ç–æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤: {len(employees_affected)}")
            print(f"‚è∞ –û–±—â–∏–µ '–±—É–¥—É—â–∏–µ' —á–∞—Å—ã: {total_hours:.2f}h")
            if employees_affected:
                print("–°–ø–∏—Å–æ–∫ –∑–∞—Ç—Ä–æ–Ω—É—Ç—ã—Ö —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤:")
                for emp in sorted(employees_affected):
                    print(f"  ‚Ä¢ {emp}")
            
            print("\nüö® –ü–û–ß–ï–ú–£ –≠–¢–û –ü–†–û–ë–õ–ï–ú–ê:")
            print("  ‚Ä¢ –ò—Å–∫–∞–∂–∞–µ—Ç —Ä–∞—Å—á–µ—Ç—ã –∑–∞—Ä–ø–ª–∞—Ç")
            print("  ‚Ä¢ –í–ª–∏—è–µ—Ç –Ω–∞ –æ—Ç—á–µ—Ç—ã –ø–æ —á–∞—Å–∞–º")
            print("  ‚Ä¢ –ú–æ–∂–µ—Ç —Å–ª–æ–º–∞—Ç—å –ª–æ–≥–∏–∫—É –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è")
            print("  ‚Ä¢ –ü—É—Ç–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ –∞–¥–º–∏–Ω–∫–µ")
            
            print(f"\n‚ö†Ô∏è –ì–û–¢–û–í –£–î–ê–õ–ò–¢–¨ {count} –ó–ê–ü–ò–°–ï–ô –° –ë–£–î–£–©–ò–ú–ò –î–ê–¢–ê–ú–ò")
            print("–î–ª—è —É–¥–∞–ª–µ–Ω–∏—è –≤—ã–ø–æ–ª–Ω–∏—Ç–µ:")
            print("=" * 50)
            print("# –°–æ–∑–¥–∞—Ç—å –±—ç–∫–∞–ø")
            print(f"backup_data = list(WorkLog.objects.filter(check_in__date__gt=date.today()).values())")
            print(f"print(f'–°–æ–∑–¥–∞–Ω –±—ç–∫–∞–ø –∏–∑ {{len(backup_data)}} –∑–∞–ø–∏—Å–µ–π')")
            print()
            print("# –£–¥–∞–ª–∏—Ç—å –∑–∞–ø–∏—Å–∏")
            print(f"deleted_count, details = WorkLog.objects.filter(check_in__date__gt=date.today()).delete()")
            print(f"print(f'–£–¥–∞–ª–µ–Ω–æ {{deleted_count}} –∑–∞–ø–∏—Å–µ–π: {{details}}')")
            print()
            print("# –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç") 
            print(f"remaining = WorkLog.objects.filter(check_in__date__gt=date.today()).count()")
            print(f"print(f'–û—Å—Ç–∞–ª–æ—Å—å –∑–∞–ø–∏—Å–µ–π —Å –±—É–¥—É—â–∏–º–∏ –¥–∞—Ç–∞–º–∏: {{remaining}}')")
            
        else:
            print("‚úÖ –ó–∞–ø–∏—Å–µ–π —Å –±—É–¥—É—â–∏–º–∏ –¥–∞—Ç–∞–º–∏ –Ω–µ—Ç - –≤—Å—ë –≤ –ø–æ—Ä—è–¥–∫–µ!")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()

# –ó–∞–ø—É—Å—Ç–∏—Ç—å –∞–Ω–∞–ª–∏–∑
cleanup_future_dates()

print("\n" + "=" * 50)
print("üí° –ü–û–î–°–ö–ê–ó–ö–ê:")
print("–ï—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å –∑–∞–ø–∏—Å–∏ –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å, –≤—ã–ø–æ–ª–Ω–∏—Ç–µ:")
print()
print("from datetime import date")
print("from worktime.models import WorkLog")
print("count = WorkLog.objects.filter(check_in__date__gt=date.today()).count()")
print("print(f'–ë—É–¥–µ—Ç —É–¥–∞–ª–µ–Ω–æ: {count} –∑–∞–ø–∏—Å–µ–π')")
print("deleted = WorkLog.objects.filter(check_in__date__gt=date.today()).delete()")
print("print(f'–£–¥–∞–ª–µ–Ω–æ: {deleted}')")