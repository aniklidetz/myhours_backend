services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: myhours_postgres
    restart: always
    environment:
      POSTGRES_DB: myhours_db
      POSTGRES_USER: myhours_user
      POSTGRES_PASSWORD: secure_password_123
      POSTGRES_INITDB_ARGS: "--encoding=UTF8 --locale=C"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - myhours_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U myhours_user -d myhours_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: myhours_redis
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - myhours_network
    command: redis-server --appendonly yes --requirepass redis_password_123
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "redis_password_123", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # MongoDB for biometrics (no auth for development)
  mongodb:
    image: mongo:7
    container_name: myhours_mongodb
    restart: always
    environment:
      MONGO_INITDB_DATABASE: biometrics_db
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    networks:
      - myhours_network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.runCommand('ping').ok"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  mongodb_data:
    driver: local

networks:
  myhours_network:
    driver: bridge